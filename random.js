let htmlBtn = document.getElementById("html-btn");
let jsBtn = document.getElementById("js-btn");
let cssBtn = document.getElementById("css-btn");
let randomBtn = document.getElementById("random-btn");
let htmlDeck = document.getElementById("display-flashcard");

let quotes = [

    "'Everyone should learn to code, it teaches you how to think.'- Steve Jobs",
    "'Learning to code is useful no matter what your career ambitions are.' - Reshma Saujani",
    "'Coding is not just for computer scientists, it's for everyone.' - Maria Klawe",
    "'The best way to predict the future is to invent it.' - Alan Kay",
    "'Programming is not about what you know, it's about what you can figure out.' - Chris Pine",
    "'Code is power. Learn to code and no challenge will ever be too big to tackle.' - Unknown",
    "'Coding is not a destination, it's a journey.' - Don Tapscott",
    "'Learning to code is like learning a new language, it opens up a whole new world of possibilities.' - Karlie Kloss",
    "'Coding is the best skill that you can learn today if you want to be successful tomorrow.' - Ryan Carson",
    "'The more you learn, the more you earn.' - Warren Buffett",
    "'Coding is not just about what you can do, it's about what you can imagine.' - Reshma Saujani",
    "'Coding is a superpower, if you have it, you can create anything you want.' - Karlie Kloss",
    "'Programming is the closest thing we have to a superpower.' - Drew Houston",
    "'I think being a successful coder has so much more to do with mindset than it does actually learning to code.' - Alex Booker",
    "'Coding is not a job, it's a passion.' - Anonymous",
    "'Learning to code is like having a superpower to create the future.' - Linda Liukas",
    "'Coding is an art, just like writing.' - Anonymous",
    "'The future belongs to those who can code.' - Gavin Andresen",
    "'Coding is the new oil. It has the potential to create the next generation of billionaires.' - Adeo Ressi",
    "'Coding is one of the highest-paying careers you can pursue, and it's only going to get more valuable in the years to come.' - Jeff Atwood",
    "'The best way to learn is by doing.' - Richard Branson",
    "'You don't have to be a genius or a math whiz to learn how to code.' - Mitch Resnick"
];

let html = [

    "How do you add a comment in HTML? What’s the shortcut on VSC?",
    "&lt!-- Like this --&gt The shortcut is ctrl and /.",
    "What is the shortcut to add the HTML structure to the document in VSC?",
    "!",
    "What code do you add to a &lta href&gt tag so that it opens in a new tab?",
    "&lt;!target='_blank'&gt",
    "What goes in the head tag?",
    "The metadata (styles, title, scripts etc.)",
    "What goes in the body tag?",
    "The tags you see on the page",
    "How can you optimize readability in HTML code (4 ways)?",
    "Use indentation. Space it out. Add &lt;!-- Subheadings --&gt;.  Use meaningful and description names for your elements, classes, and IDs.",
    "What is semantic HTML? Why is it used?",
    "A coding practice that involves using HTML elements that have a clear meaning and purpose based on their name, rather than using generic elements such as <div> or <span> to style content. It’s better for accessibility, readability and SEO. More examples are: &ltheader&gt &ltsection&gt &ltfooter&gt &ltmain&gt.",
    "Do form elements inherit font settings?",
    "No, the default settings come from the browser’s stylesheet, so you have to set them manually with font-family: inherit in CSS."

];

let css = [
    "How do you link from CSS from HTML?",
    "&ltlink rel='stylesheet' href='styles.css'&gt",
    "What’s the shortcut for adding a comment in CSS?",
    "The shortcut is ctrl and /.",
    "What subheading comments can you use in CSS to make it easier to read? Give 3 examples.",
    "1. / typography / 2. / links / 3. / layout /",
    "How should you go about styling buttons in CSS?",
    "Create a .btn class with all the core styling. Create .btn-primary, btn-success etc. as modifiers for other buttons depending on the action they perform. Add :focus state as well as :hover state in case a user selects it with their keyboard.",
    "What's the key difference between flexbox and CSS grid?",
    "Flexbox is a one-dimensional layout system that is best suited for arranging elements in a row or column. CSS grid, on the other hand, is a two-dimensional layout system that allows you to define both rows and columns, and place elements into specific grid cells.",
    "What’s the syntax for CSS grid?",
    "display: grid: This property is used to define a container as a grid container. grid-template-rows: This property is used to define the height of each row in the grid. grid-template-columns: This property is used to define the width of each column in the grid. grid-template-areas: This property is used to define named grid areas within the grid. grid-row-start, grid-row-end, grid-column-start, and grid-column-end: These properties are used to place grid items within the grid by specifying the starting and ending grid lines for each item. grid-area: This shorthand property is used to place an item within a named grid area. grid-row and grid-column: These shorthand properties are used to specify the starting and ending grid lines for an item in a single declaration. grid-gap: This property is used to define the gap between rows and columns in the grid.",
    "What are the basic steps to code flexbox?",
    "Create a container element that will be the parent of the flex items. Set the display property of the container to flex to activate flexbox behavior. Define the flex direction of the container using the flex-direction property. Use the justify-content property to control the spacing between items along the main axis – the flex-direction. Use the align-items property to align the flex items on the other (cross) axis. Flexbox is super helpful because it allows you to dynamically alter the height/width of flex items to fill the available space, making it responsive. If you set flex-grow property to 1 on all of your items, they’ll grow to fill the available space at the same rate. Similarly, if you set flow-shrink property to 1 on all of your items, they’ll shrink at the same pace. If you’d rather them wrap onto another line instead of shrink, use the flex-wrap property.",
    "What do you do if you want your flex items to have a default size before flexbox responsiveness settings are introduced?",
    "Use the flex-basis property, which will override the width or height properties.",
    "What will happen if a flex-item is set to flex-grow: 2?",
    "It’ll fill up the available space at twice the rate of the other items. ",
    "Which property becomes redundant if you’re using flex-grow? ",
    "When your flex items are set to grow, that means they’re filling all the available space along the main axis. Therefore, the justify-content property becomes irrelevant. ",
    "How to horizontally align an element in CSS?",
    "Use margin: auto. Display must be block and it must have a specified width.",
    " In responsive design, what is the common % width of containers and how does it work?",
    "90% is common, it is the percentage of the parent element’s width.",
    "How can you prevent content from elongating too much?",
    "You can use width % with max-width px.",
    "What’s one possible reason for margin: auto not working?",
    "It may be because the item is set to display: inline – it needs to be display: block. Images are automatically set to inline, like text.",
    "What pseudo-class selects elements that do not match a certain selector?",
    ":not()",
    "What pseudo-class selects elements that have no content?",
    ":empty",
    "How can you centre child elements in a flexbox container?",
    "With margin: auto or align-self: center.",
    "How can you control how overflowing flex items behave?",
    "You can use the flex-wrap property to control how flex items wrap to a new row or column when the container isn’t wide enough to display them all on one line. ",
    "What’s good practice for top and bottom padding for links and buttons?",
    "It’s good practice to set top and bottom padding values to 0.5em and the left and right values to the current font size 1em to help ensure everything is proportionate. It’s also common to set margin bottom to 1em.",
    "What is the rem unit relative to?",
    "The root &lt html &gt element.",
    "What should you set the line height to?",
    "Approximately 1.5x the font size – 1.5 (it’s a unitless value).",
    "Which units are ideal to use for each element: font size, margin and padding, line height, width, max-width?",
    "Font size: rem, margin and padding: em, line height: unitless, width: %, max-width: px.",
    "What’s the syntax for writing media queries?",
    "@media (min-width: 500px) { css } },",
    "What’s the common px measurement of body text on mobile?",
    "700-800px.",
    "How can you make buttons easier to click on mobile?",
    "Display them as block elements.",
    "What are the common breakpoints for: mobile, tablet, smaller laptops, larger laptops?",
    "Mobile: 480px, tablet: 768px, smaller laptops: 1024px, larger screens: 1280px.",
    "Can you display top or bottom padding or margin on display: inline elements?",
    "No, they need to be display: block.",
    "How to horizontally align a flexbox element?",
    "Margin: auto or align-self: center.",
    "What does the border-radius property do?",
    "It allows you to display soft corners. ",
    "What do we need to create in HTML for each flexbox element?",
    "A &ltdiv&gt for each element.",
    "What specifies the direction of the main axis of a flex container?",
    "Flex-direction.",
    "What does the order property do?",
    "Orders the items in flexbox. -1 will display the item first and 1 will display the item last. Ordering them all with 1, 2, 3, 4 etc will also work.",
    "How do you add space in between letters using CSS?",
    "Letting-spacing: 1px.",
    "What does box-sizing: border-box do?",
    "It sets the total width and height of an element to include its content, padding, and border. This means that adding padding or a border to an element will not affect its overall size, and can help ensure that layouts are more predictable and consistent.",
    "How do you select all the HTML elements in CSS?",
    "With the universal selector: *. This is commonly used to set box-sizing: border-box to all elements. Remember to add pseudo-elements such as *::before and *::after. Put it at the top of your CSS code.",
    "What’s the common guideline for the amount of text characters per line?",
    "50-75 characters, including spaces. You can set max-width in pixels to implement this.",
    " What is the viewport meta tag?",
    "&lt;meta name='viewport' content='width=device-width, initial-scale=1'&gt;- it’s a special HTML tag that provides instructions to the web browser on how to display a web page on a mobile device. Specifically, it helps the browser adjust the layout and scaling of the content to fit the screen size and resolution of the device.",
    "Where does the viewport meta tag go?",
    "In the head tag of the HTML.",
    "What’s the shorthand to set both flex-grow and flex-basis?",
    "Flex: [grow][basis],",
    "What is the default flex direction in flexbox?",
    "Row.",
    "How to create a perfect circle shaped image in CSS?",
    "Border-radius 50% when the image has an equal width and height.",
    "How can you use CSS to capitalize first letters?",
    "Text-transform: capitalize. There’s also text-transform: uppercase/lowercase.",
    "How can you set an element to completely fill the height of the viewport?",
    "Height: 100vh.",
    "What pseudo-class selects and styles a selected input element, such as a checkbox or radio button?",
    ":checked",
    "What pseudo-class selects and styles a disabled input element?",
    ":disabled",
    "What pseudo-class selects and styles an enabled input element?",
    ":enabled",
    "What is 1vw equal to?",
    "1% of the viewport width.",
    "How would you create a box behind a box (like what you see here) using CSS?",
    "Use the pseudo-element (::before) on the box element (for example, ‘.current-flashcard::before’). Use ‘position: absolute’ and ‘z-index: -1’ to place it behind the box element. Set ‘position: relative’ on the box in front of the pseudo-element.",
    "How do you scale a background image to fill an entire container in CSS?",
    "Background: cover.",
    "Why should you always set a background colour even if you have a background image?",
    "To act as a fallback in case the image doesn’t load.",
    "In flexbox, what does justify-content do? What are the options?",
    "It dictates how the elements are positioned in the container along the main axis (horizontally). Options are start, center, end, space-between, space-around and space-evenly.",
    "In flexbox, what does align-content do? What are the options?",
    "It dictates how the elements are positioned in the container along the cross-axis (vertically). Options are start, center, end, space-between, space-around and stretch.",
    "What does flex-wrap do?",
    "It wraps the items on multiple lines if they don’t fit onto one line.",
    "What does flex-grow do?",
    "Specifies how much a flex item should grow relative to the other flex items when there is extra space available along the main axis.",
    "What does flex-shrink do?",
    "Specifies how much a flex item should shrink relative to the other flex items when there is not enough space available along the main axis.",
    "What does flex-basis do?",
    "Specifies the initial size of a flex item before any free space is distributed.",
    "What does place-content do in flexbox?",
    "It’s a shorthand property that combines align-content and justify-content into one property.",
    "How can you add space between flexbox items?",
    "With the gap, row-gap and column-gap properties.",
    "What are the two shorthand properties in flexbox and what do they do?",
    "Flex-flow combines flex-direction and flex-wrap into one property, and flex combines flex-grow, flex-shrink and flex-basis.",
    "What does the align-self property do?",
    "When applied to a flex item, align-self overrides the align-items property set on the parent flex container for that particular item.",
    "What does flex: auto do?",
    "It sets the flex-grow property to 1, the flex-shrink property to 1, and the flex-basis property to auto.",
    "In the code: margin 10px 20px 30px 40px, what does each px specify?",
    "Top, right, bottom, left (think of how a clock works)",
    "What does align-self do in flexbox?",
    "Defines how a single flex item is aligned along the cross-axis of the flex container, overriding the align-items value for that item.",
    "In the code: margin 10px 20px, what does each px specify?",
    "Top and bottom, 10px. Left and right, 20px.",
    "What can you add with the border-bottom property to make it look better than the text-decoration property for underlining content? What else do you need to add?",
    "Padding. You need to add display: inline, so that the underline won’t be longer than the word itself.",
    "What does utility class refer to in CSS?",
    "Something that has one job only, for example, &ltspan class=””&gt.",
    "What happens to the margin when an element touches its parent?",
    "It’s top and bottom margins will merge with the margins of the parent element. To solve this, you can add padding to the parent element. This is not an issue while using flexbox and grid.",
    "What pseudo-class selects and styles the element that has become the active element in a web page, such as an input field?",
    ":focus",
    "Which pseudo-class provides visual feedback to the user, indicating that the element is interactive and can be clicked or activated?",
    ":hover",
    "What pseudo-class selects a link that has been clicked on?",
    ":visited",
    "What does this code select: .ad-container a {}",
    "Any anchor elements within the ad-container class.",
    "What pseudo-classes select the first and last child elements of a parent element?",
    ":first-child and :last-child",
    "How would you select all odd-numbered child elements of a parent class element, starting from the first child? ",
    ".parent :nth-child(2n+1).",
    "What pseudo-class selects child elements of a certain type based on a formula or expression?",
    ":nth-of-type()",
    "What does the transform property do? ",
    "The transform property allows you to apply various types of transformations to an element, including rotating, scaling, translating, and skewing it. It can be used to create complex visual effects and animations, without changing the layout or the position of the element. ",
    "What pseudo-class selects elements that are the only child of their parent element?",
    ":only-child",
    "What pseudo-class selects elements that are the only element of their type within their parent element?",
    ":only-of-type",
    "What do block elements do? Can you set height and margin top and bottom to them? Give three examples.",
    "They stack on top of each other. Yes, you can set the height and margin top and bottom. Div, p and h1 are three examples of block elements.",
    "What do inline elements do? Can you set height and margin top and bottom to them? Give two examples.",
    "They sit side by side. No, you can’t set height and margin top and bottom. Span and a are two examples of inline elements.",
    "What do inline-block elements do? Can you set height and margin top and bottom to them? Give two examples.",
    "They sit side by side. Yes, you can set height and margin top and bottom. Button and input are two examples of inline elements.",
    "How do you display an image as a cursor?",
    "cursor: url('path/to/image.png'), auto. The auto value is used as a fallback, in case the browser is unable to load the image). The image should be 32x32 pixels or less, and in a compatible file format such as PNG, GIF or JPEG. You should save it as 150dpi.",
    "How do you darken an image with CSS?",
    "filter: brightness(0.5) - this would add a 50% darkness effect to an image.",
    "What are three ways to position an element to the right in CSS?",
    "1. With ‘text-align: right’ (for text and inline-level elements within a block-level element), 2. ‘Float: right’ (for positioning an element to the right of its container), 3. The position property (position: absolute; right: 0) for positioning an element relative to its parent container or the viewport.",
    "What is the difference between margin and padding in CSS?",
    "Margin is the space outside of an element's border, while padding is the space between an element's content and its border.",
    "What’s the difference between ID and class in CSS?",
    "ID is used to uniquely identify a single element, while class is used to group together multiple elements with similar styles. IDs should only be used once per page, while classes can be used multiple times.",
    "What is a CSS reset and why is it useful?",
    "A CSS reset is a stylesheet that resets the default styles of HTML elements to create a consistent baseline for styling. It's useful because different browsers have different default styles for HTML elements, and a reset ensures that your styles will display consistently across different browsers.",
    "What is the mobile-first approach in responsive web design, and why is it important?",
    "The mobile-first approach involves designing for mobile devices first, then using media queries to scale up to larger screens. It’s important because it ensures a consistent user experience across all devices, and helps to prioritize content and functionality.",
    "How can you optimize website performance for responsive web design?",
    "You can optimize performance by minimizing file sizes, reducing HTTP requests, and using efficient coding practices. You can also use responsive image techniques and lazy loading to improve page load times.",
    "What is a breakpoint in responsive web design, and how do you define it?",
    "A breakpoint is a specific screen size at which the design layout changes. You define it using a media query that targets a specific screen size range.",
    "What is root in CSS?",
    "The term ‘root’ refers to the highest-level parent element, which is typically the HTML document itself. It is represented in CSS using the :root pseudo-class selector. The :root selector is used to define CSS styles that apply to the root element of the document, and is often used to declare global variables that can be used throughout the stylesheet.",
    "Why do developers use custom variables in CSS?",
    "Reusability: With CSS variables, developers can define a value once and reuse it throughout their stylesheet. This makes it easier to maintain and update a website's styles. Consistency: Using custom variables can help ensure that the same values are used consistently across a site's styles, making it easier to maintain a consistent design language. Dynamic styling: CSS variables can be manipulated dynamically using JavaScript, which allows developers to create more dynamic and interactive styles. Theming: Custom variables can be used to define a set of theme colors that can be easily applied to a site's styles, allowing for easy theming and customization.",
    "What is a fluid grid layout in responsive web design?",
    "A fluid grid layout is a design approach that uses proportional measurements, such as percentages, to create a flexible layout that adjusts to any screen size.",

];

let js = [

    "How do you declare a variable in JavaScript?",
    "You can declare a variable in JavaScript using the var, let, or const keyword followed by the variable name.",
    "What’s the difference between var, let, and const?",
    "Var and let are used to declare variables that can be reassigned later, while const is used to declare variables that cannot be reassigned once they are initialized.",
    "What is the scope of a variable in JavaScript?",
    "Scope refers to the visibility and accessibility of variables within a program. Variables declared with var have function scope, meaning it can be accessed anywhere within the function where it was declared. On the other hand, variables declared with let and const have block scope, meaning they can only be accessed within the block they were defined in (e.g., a loop or an if statement block).",
    "What’s the difference between local and global variables in JavaScript?",
    "Local variables are declared inside a function and can only be accessed within that function, while global variables are declared outside of any function and can be accessed from anywhere in the code.",
    "What is hoisting in JavaScript?",
    "Hoisting is a JavaScript mechanism that allows variables and functions to be declared after they are used in the code. In other words, JavaScript moves all variable and function declarations to the top of the current scope before executing any code.",
    "Can you declare a variable without assigning a value to it in JavaScript?",
    "Yes, you can declare a variable without assigning a value to it in JavaScript. This is called 'initializing' a variable to the value undefined. If you try to use a variable without initializing it, you may encounter unexpected behavior in your code.",
    "How do you check the type of a variable in JavaScript?",
    "You can check the type of a variable in JavaScript using the typeof operator, like this: typeof myVariable.",
    "How do you convert a variable to a string in JavaScript?",
    "You can convert a variable to a string in JavaScript using the toString() method, like this: myVariable.toString();. This method converts the value of the variable to a string.",
    "What is a loop in JavaScript? What’s the syntax?",
    "A loop is a programming construct in JavaScript that allows you to repeat a set of instructions multiple times. JavaScript has three types of loops: for, while, and do-while. for (initialization; condition; iteration) { // code to be executed }",
    "Which JavaScript method creates and returns a new string by concatenating all of the elements in an array (or an array-like object), separated by commas or a specified separator string?",
    "join()",
    "Which JavaScript method returns the index of the last occurrence of a specified element in an array and returns -1 if the element is not found?",
    "lastIndexOf()",
    "Which JavaScript method returns a new array that contains all elements of the original array that pass a specified test function?",
    "filter()",
    "Which JavaScript method returns a new array that contains the results of applying a specified function to each element of the original array?",
    "map()",
    "Which JavaScript method applies a specified function to each element of an array and returns a single value?",
    "reduce()",
    "Which JavaScript method executes a specified function once for each element in an array?",
    "forEach()",
    "How does a while loop work in JavaScript? What’s the syntax?",
    "A while loop in JavaScript allows you to execute a block of code as long as a condition is true. while (condition) { // code to be executed }",
    "How does a do-while loop work in JavaScript? What’s the syntax?",
    "A do-while loop in JavaScript is similar to a while loop, except that the code inside the loop is executed at least once before the condition is checked. do { // code to be executed } while (condition);",
    "How do you break out of a loop in JavaScript?",
    "Using the break statement. The break statement immediately terminates the loop and continues with the next statement in the code.",
    "How do you continue a loop in JavaScript?",
    "You can continue a loop in JavaScript using the continue statement. The continue statement skips the current iteration of the loop and continues with the next iteration.",
    "How do you iterate over an array in JavaScript?",
    "Using a for loop or a forEach() method. The for loop allows you to loop over each element in the array using an index, while the forEach() method allows you to loop over each element in the array using a callback function.",
    "How do you iterate over an object in JavaScript?",
    "Using a for...in loop or the Object.keys() method. The for...in loop allows you to loop over each property in the object, while the Object.keys() method returns an array of the object's keys, which you can then loop over using a for loop or a forEach() method.",
    "How do you find the length of a myString? let myString = ‘Hello, world!’",
    "let stringLength = myString.length",
    "How do you convert ‘Hello, world!’ to uppercase? let myString = ‘Hello, world!’",
    "let uppercaseString = myString.toUpperCase();",
    "How do you split myString into an array? let myString = ‘Hello, world!’",
    "let myArray = myString.split(‘ ‘);",
    "How do you concatenate strings in JavaScript?",
    "Using the + operator, or the concat() method, like this: let string1 = ‘Hello, ‘; let string2 = ‘world!’; let concatenatedString = string1 + string2; // or let string1 = ‘Hello, ‘; let string2 = ‘world!’; let concatenatedString = string1.concat(string2);",
    "How do you add elements to an array in JavaScript?",
    "Using the push() method, which adds one or more elements to the end of the array, or the unshift() method, which adds one or more elements to the beginning of the array, like this: let myArray = [‘cat’, ‘dog’, ‘fish’]; myArray.push(‘goat’); myArray.unshift(‘hippo’);",
    "What does this return? let myArray = [‘cat’, ‘dog’, ‘fish’]; myArray.push(‘goat’); myArray.unshift(‘hippo’);",
    "[‘hippo’,’cat’,’dog’,’fish’,’goat’]",
    "How do you remove elements to an array in JavaScript?",
    "Using the pop() method, which removes the last element from the array, or the shift() method, which removes the first element from the array, like this: let myArray = [‘cat’, ‘dog’, ‘fish’]; myArray.pop(); myArray.shift();",
    "What does this return? let myArray = [‘apple’, ‘banana’, ‘orange’]; myArray.pop(); myArray.shift();",
    "‘banana’",
    "What is an event in JavaScript?",
    "An event is a user action or system occurrence (such as a mouse click or a page load) that triggers a specific function or code block in JavaScript.",
    "What’s the difference between == and === in JavaScript?",
    "The == (loose equality) operator checks for equality with type coercion, while the === (strict equality) operator checks for equality without type coercion. Type coercion is the automatic or implicit conversion of values from one data type to another (such as strings to numbers). So, the strict equality operator only returns true if the operands have the same value and data type.",
    "What’s the difference between && and || in JavaScript?",
    "The && operator performs a logical AND operation, returning true if both operands are true, while the || operator performs a logical OR operation, returning true if either operand is true.",
    "What’s the difference between null and undefined in JavaScript?",
    "Null is an intentional absence of any object value, while undefined is the absence of a value.",
    "What are some common JavaScript frameworks and libraries?",
    "Some common JavaScript frameworks and libraries include React, Angular, Vue, jQuery, and Node.js.",
    "What is AJAX in JavaScript?",
    "AJAX (Asynchronous JavaScript and XML) is a technique for creating fast and dynamic web pages that update without reloading the entire page. AJAX allows you to send and receive data asynchronously using JavaScript, XML, and sometimes JSON.",
    "What are try/catch blocks in JavaScript?",
    "The try statement allows you to define a block of code to be tested for errors while it is being executed. The catch statement allows you to define a block of code to be executed, if an error occurs in the try block.",
    "What does the throw statement do?",
    "The throw statement allows you to create a custom error. If you use throw together with try and catch, you can control program flow and generate custom error messages.",
    "What’s the difference between innerText and textContent?",
    "innerText returns only the visible text content of an element, while textContent returns all of the text content, including any invisible characters and line breaks.",
    "Why do you need to be careful while using innerHTML?",
    "Using innerHTML to set content can be a security risk because it can allow for cross-site scripting attacks, so it should only be used with trusted sources. Cross-site scripting (XSS) attacks allow an attacker to inject malicious code into a web page viewed by other users. To prevent XSS attacks, web developers can implement security measures such as input validation and output encoding, as well as using security libraries and frameworks that provide XSS protection.",
    "What is an object in JavaScript?",
    "An object in JavaScript is a collection of key-value pairs, where each key is a string (or symbol) that maps to a value, which can be any data type, including other objects.",
    "What’s a for of loop in JavaScript?",
    "The ‘for-of’ loop is a simpler and more concise way of iterating over iterable objects, and is particularly useful when you need to perform some operation on each element in an array or other collection. Unlike the traditional ‘for’ loop, a ‘for-of’ loop does not provide access to the index of each element in the iterable object.",
    "How do you create an object in JavaScript?",
    "You can create an object in JavaScript using object literal notation, like this: var myObject = { key1: ‘value1’, key2: ‘value2’, key3: 3, key4: true };",
    "What’s the difference between an object and an array in JavaScript?",
    "An array is a special type of object in JavaScript that is used to store ordered collections of data, while a regular object is used to store key-value pairs. Arrays have numbered indexes that start at 0 and go up to the length of the array minus one, while objects have string or symbol keys that can be any value.",
    "How can you access the properties of myCat? var myCat = { name: ‘Jasper’, behaviour: naughty, isSmol: true };",
    "You can access the properties of an object in JavaScript using dot notation or bracket notation, like this: console.log(myCat.name) or this: console.log(myCat[‘behaviour’]). Dot notation is more commonly used for accessing properties, but bracket notation can be useful for accessing properties with dynamic or non-standard keys.",
    "What is a method in JavaScript?",
    "A method in JavaScript is a function that is attached to an object and can be called on that object. For example, log is a method on the console object.",
    "How do you loop through the properties of an object in JavaScript?",
    "You can loop through the properties of an object in JavaScript using a for...in loop.",
    "What’s an array in JavaScript?",
    "An array in JavaScript is a special type of object that stores ordered collections of data. The data can be of any type, including other arrays and objects.",
    "What is local storage in JavaScript?",
    "Local storage in JavaScript is a way to store key-value pairs in a user's web browser. The data is stored locally on the user's device and persists even after the browser is closed.",
    "How do you set a value in local storage in JavaScript?",
    "You can set a value in local storage in JavaScript using the setItem() method of the localStorage object, like this: localStorage.setItem(‘myKey’, ‘myValue’),",
    "How do you get a value from local storage in JavaScript?",
    "A: You can get a value from local storage in JavaScript using the getItem() method of the localStorage object, like this: var myValue = localStorage.getItem(‘myKey’),",
    "How do you use modules in JavaScript to organize code across multiple files?",
    "You can use modules in JavaScript to organize code across multiple files by exporting and importing variables and functions between files.",
    "How do you remove a value from local storage in JavaScript?",
    "You can remove a value from local storage in JavaScript using the removeItem() method of the localStorage object.",
    "How can you select and return the first element that matches a specified CSS selector?",
    "Using the querySelector() method. It can be called on the document object or on any element in the document.",
    "What does this code do? const heading = document.querySelector('h1')",
    "It returns the first h1 element in the document and assigns it to the heading variable. You can then use the heading variable to manipulate the selected element, such as changing its text content or styling.",
    "How do you find the index of an element in an array in JavaScript?",
    "You can find the index of an element in an array in JavaScript using the indexOf() method, which returns the index of the first occurrence of the element, or -1 if the element is not found.",
    "How do you remove the element at index 1? let myArray = [‘Tom’, ‘Dave’, ‘Jerry’]",
    "myArray.splice(1, 1),",
    "How do you join elements of an array into a string?",
    "You can join elements of an array into a string in JavaScript using the join() method, which joins the elements with a specified separator and returns the resulting string.",
    "What does this return? let myArray = [‘zebra’, ‘dog’, ‘fish’]; myArray.sort();",
    "[‘dog’,’fish’,’zebra’]. The sort() method sorts the elements in ascending order by default.",
    "How do you reverse the order of elements in an array in JavaScript?",
    "You can reverse the order of elements in an array in JavaScript using the reverse() method.",
    "How do you convert a string to a number in JavaScript?",
    "You can convert a string to a number in JavaScript using the parseInt() or parseFloat() functions.",
    "What is a namespace in JavaScript, and how can it help with working across multiple files?",
    "A namespace in JavaScript is a way to organize code by creating a unique object or module for a set of related variables and functions. By using namespaces, you can avoid naming conflicts between variables and functions in different files.",
    "How do you convert a number to a string in JavaScript?",
    "You can convert a number to a string in JavaScript using the toString() method.",
    "What does this return? let myNumber = 123.456; let roundedNumber = myNumber.toFixed(2);",
    "‘123.46’, The toFixed() method returns a string representation of the number with the specified number of decimal places.",
    "What does this return? let myArray = [1, 2, 3, 4, 5]; let maxValue = Math.max(...myArray);",
    "5, The Math.max() function returns the maximum value of an array of numbers.",
    "How do you generate a random number in JavaScript?",
    "Using the Math.random() function, which generates a number greater than or equal to 0.0 and less than 1.0.",
    "What’s the code for generating a random number between 1 and 7?",
    "let randomNum = Math.ceil(Math.random() * 7),",
    "What’s the difference between Math.ceil and Math.floor?",
    "Both are used to round numbers. Math.floor() rounds a number down, while Math.ceil() always rounds a number up.",
    "What is an else statement in JavaScript?",
    "An else statement is a type of conditional statement that executes a block of code if the condition of the corresponding if statement is false.",
    "What is an else if statement in JavaScript?",
    "An else if statement is a type of conditional statement that allows you to check multiple conditions and execute different code depending on which condition is true.",
    "What is a ternary operator in JavaScript?",
    "The ternary operator is the only JavaScript operator that takes three operands: a condition followed by a question mark ( ? ), then an expression to execute if the condition is truthy followed by a colon ( : ), and finally the expression to execute if the condition is falsy. For example: let x = 5; let message = (x > 3) ? ‘x is greater than 3’ : ‘x is less than or equal to 3’;",
    "What are the different data types in JavaScript?",
    "The different data types in JavaScript are string, number, boolean, null, undefined, object, and symbol (introduced in ES6).",
    "What does this code do? const examples = document.querySelectorAll('.example')",
    "This code uses the querySelectorAll() method to select all the elements in the HTML document with a class of ‘example’ and returns a NodeList containing those elements. The NodeList can then be looped through to perform various actions on each element, such as modifying their content or styles using JavaScript.",
    "Why use object destructuring?",
    "Object destructuring allows you to extract properties from an object and assign them to variables in a single line of code. This can make your code more concise and readable, especially when dealing with complex objects with many properties.",
    "What’s the arrow function in JavaScript?",
    "An arrow function is a shorthand way of defining a function using the =&gt syntax. Arrow functions were introduced in ECMAScript 6 (ES6) and provide a more concise and expressive way to write functions.",
    "How would you rewrite this code using an arrow function? function addNumbers(a, b) { return a + b; }",
    "const addNumbers = (a, b) =&gt a + b;",
    "What is the ‘this’ keyword?",
    "In JavaScript, the ‘this’ keyword refers to the object that is currently executing a function or method. When this is used in the global scope (outside of any function), it refers to the global object, which is typically the window object in a web browser. When this is used inside a function, its value is determined by how the function is called. If the function is called as a method of an object, this refers to the object itself. If the function is called as a standalone function, this refers to the global object (or undefined in strict mode).",
    "Which JavaScript method adds one or more elements to the beginning of an array and returns the new length of the array?",
    "unshift()",
    "Which JavaScript method returns a new array that contains a portion of an existing array?",
    "slice()",
    "Which JavaScript method removes the first element from an array and returns it?",
    "shift()",
    "Which JavaScript method removes the last element from an array and returns it?",
    "pop()",
    "Which JavaScript method adds one or more elements to the end of an array and returns the new length of the array?",
    "push()",
    " What does this code do? const numbers = [1, 2, 3, 4, 5]; const found = numbers.find(function(element) { return element &gt 3; });",
    "It uses the find() method to find the first element in an array that is more than 3.",
    "What does this code do? const numbers = [1, 2, 3, 4, 5]; const filtered = numbers.filter(function(element) { return element % 2 === 0; });",
    "It uses the filter() method to filter out all the odd numbers in the array by checking if the remainder of the current element divided by 2 is equal to 0.",
    "What does this code do? const catBreeds = ['Siamese', 'Persian', 'Sphynx', 'Bengal']; const catTheme = catBreeds.map(function(breed) { return ‘I love ‘ + breed + ‘ cats!’; });",
    "It uses the map() method to map each element in the catBreeds array to a new string that says ‘I love’ followed by the name of the cat breed and the word ‘cats!’.",
    "What does this code do? const dogBeds = ['small', 'medium', 'large']; const dogBedsFilled = new Array(5).fill('My dog loves a ' + dogBeds[1] + ' bed.'); console.log(dogBedsFilled);",
    "It uses the fill() method to create a new array with 5 elements, each one containing a string: ‘My dog loves a’ followed by the value of the second element in the dogBeds array, which is 'medium'.",
    "Which JavaScript method returns a new array that combines two or more arrays?",
    "concat()",
    "Which JavaScript method tests whether at least one element in an array passes a specified test function?",
    "some()",
    "Which JavaScript method tests whether all elements in an array pass a specified test function?",
    "every()",
    "Which JavaScript method copies a sequence of array elements within the array, overwriting existing elements?",
    "copyWithin()",
    "Which JavaScript method fills all the elements of an array from a start index to an end index with a static value?",
    "fill()",
    "Which JavaScript method returns the value of the first element in an array that passes a provided test function?",
    "find()",
    "Which JavaScript method determines whether an array includes a certain element, returning a boolean value?",
    "includes()",
];

let random = [

    "How can we write clean code?",
    "Write self-explanatory variable and function names that accurately describe their purpose. Keep functions short and focused on doing one thing well. Use consistent formatting and indentation to make your code more readable. Use comments to explain complex logic or any unclear parts of your code. Avoid unnecessary or redundant code, such as unused variables or functions. Use descriptive and clear error messages to help with debugging. Follow established naming conventions and patterns for variables, functions, and files. Use whitespace effectively to group related code and make it easier to read. Use proper indentation to make the structure of your code clear and easy to follow. Write tests to ensure that your code works as intended and to catch bugs early.",
    "How can we ensure accessibility?",
    "Use semantic HTML tags that accurately describe the content on the page, such as header, nav, main, article, section, and footer. Use alt text for images. Use appropriate color contrast. Use descriptive link text: Avoid using generic link text like ‘click here’ or ‘read more’. Instead, use descriptive text that accurately describes the link destination. Use ARIA attributes: Use ARIA (Accessible Rich Internet Applications) attributes to provide additional context and information for users of assistive technologies. Provide keyboard navigation. Provide captions and transcripts for videos. Ensure form inputs are labelled. Avoid using flashing or blinking elements. Test with accessibility tools.",
    "How can we make our code run fast?",
    "Choose the most efficient algorithms and data structures to solve a particular problem. This can drastically reduce the amount of time taken to run our code. Avoid nested loops. Reduce I/O operations (operations that involve the transfer of data between a computer and an external device, such as a keyboard, mouse, disk drive, printer, or network connection). Use asynchronous programming. Minimize the number of database queries as each query can be a bottleneck for performance. Try to combine queries, use caching, or retrieve data in advance to reduce the number of database calls. Optimize the database indexes to speed up database queries. Use caching. Reduce memory usage. Avoid using global variables whenever possible as they can slow down our code by introducing complexity and making it difficult to maintain.",
    "How can we write scalable code?",
    "Start by designing a scalable architecture that can accommodate future growth and changes. Use modular design principles, such as separation of concerns and loose coupling, to create a flexible and extensible codebase. Choose the most efficient algorithms and data structures. Optimize your database queries and indexes. Avoid resource-intensive operations such as excessive I/O operations, CPU-intensive calculations, and memory leaks. Use asynchronous programming, parallel processing, and other techniques to distribute workload across multiple resources. Minimize the impact of network latency by using a content delivery network (CDN), caching, etc., to reduce the distance and number of network requests. Use load balancing to distribute incoming traffic across multiple servers to avoid overloading a single server. Monitor and optimize performance. Automate testing and deployment to ensure that your code works as expected and is deployable at scale.",
    "Modularity and encapsulation are good coding practices - what are they exactly?",
    "Modularity refers to breaking down a program into smaller, self-contained modules that can be developed, tested, and maintained independently. Encapsulation refers to the practice of hiding the implementation details of a module from other modules and providing a well-defined interface for interacting with it. These practices help to make code easier to understand, test, and modify. They also promote code reuse, reduce the likelihood of errors, and improve the overall quality of the codebase.",
    "What do you need to do before you design a project in Figma?",
    "Map out the user journey. Do a wireframe in Figma and develop the prototype with animations. Also, map out the functionality of the app before you start coding.",
    "What’s the shortcut for indenting to the left in Visual Studio Code?",
    "Shift and tab.",
    "How can you go about testing your code?",
    "There are many tools available for testing code, depending on the language, framework, and type of testing you want to perform. Unit Testing Frameworks: For testing individual units or components of code, you can use tools like Junit and NUnit. Code Linters: Linters are used to detect errors or potential problems in your code, for example, ESLint for JavaScript. Integration Testing Tools: For testing how different parts of your code work together, you can use tools like Selenium for web applications, Appium for mobile applications, and Robot Framework for automation testing.  Mocking Libraries: These libraries are used to simulate parts of your code that are difficult or impossible to test. Mocha is a popular mocking library for JavaScript.",
    "What is unit testing?",
    "Unit testing is a software testing technique where individual units or components of a software application are tested in isolation from the rest of the application. The purpose of unit testing is to validate that each unit or component of the application is functioning as intended, and to catch and fix any defects early in the development cycle.  Unit testing helps to identify and fix defects early in the development process, which can save time and money by reducing the number of defects that make it into later stages of testing or into production. It also helps to improve the quality of the code by ensuring that each unit or component is working as intended, and by promoting good coding practices such as modularity and encapsulation.",
    "What is meant by 404 Not Found?",
    "This error occurs when the requested resource (e.g. a webpage or file) cannot be found on the server. This can happen if the URL is incorrect or if the resource has been deleted or moved.",
    "What is meant by 500 Internal Server Error?",
    "This error occurs when the server encounters an unexpected error that prevents it from fulfilling the request. This can happen if there is an issue with the server configuration, if the server is overloaded, or if there is a problem with the application code.",
    "What is meant by 403 Forbidden?",
    "This error occurs when the server refuses to fulfill the request because the client does not have sufficient permissions to access the requested resource. This can happen if the client is not authenticated or authorized to access the resource.",
    "What is meant by 401 Unauthorized?",
    "This error occurs when the client is not authenticated to access the requested resource. This can happen if the client has not provided valid credentials or if the credentials are not recognized by the server.",
    "What is meant by 504 Gateway Timeout?",
    "This error occurs when the server acting as a gateway or proxy does not receive a timely response from the upstream server. This can happen if the upstream server is down or overloaded, or if there is a network connectivity issue between the two servers.",
    "What is object-oriented programming (OOP)?",
    "It’s a programming paradigm that’s based on the concept of ‘objects’, which can contain data and code to manipulate that data. It’s a way of organizing code and data into reusable, modular components. In OOP, objects are created from classes, which define the properties and methods that the objects will have. Properties are the characteristics of an object, such as its size, color, or name, while methods are the actions that an object can perform, such as moving, rotating, or changing its color. Examples of OOP languages include JavaScript, Python and Swift.",
    "What are the advantages and disadvantages of object-oriented programming (OOP)?",
    "Encapsulation: OOP allows for data and methods to be grouped together, making it easier to organize code and maintain data integrity. Abstraction: OOP allows developers to create simplified interfaces that hide complexity and reduce dependencies. Inheritance: OOP allows for the creation of hierarchies of classes, which can be useful for modeling complex relationships and avoiding code duplication. Criticisms include: Complexity: OOP can be difficult to learn and understand. Performance: OOP can create bloated code and can be slower to execute. Flexibility: OOP can be limiting in terms of code reuse, as changes to base classes can affect multiple derived classes. Dependency: OOP can create complex dependencies between classes, which can make it difficult to refactor code and introduce bugs.",
    "What is the opposite of OOP?",
    "The opposite of Object-Oriented Programming (OOP) is Procedure-Oriented Programming (POP), which focuses on dividing a program's functionality into separate functions or procedures that operate on data. In POP, the emphasis is on the procedure, while in OOP, the emphasis is on the object.",
    "Which languages use procedural programming?",
    "Some examples of programming languages that are typically associated with procedural programming include C, Pascal, and Fortran. However, most programming languages are designed to support multiple programming paradigms, including procedural, object-oriented, functional, and others, so it's possible to use procedural programming techniques in languages that are not traditionally associated with this style.",
    "What is meant by 400 Bad Request?",
    "This error occurs when the server cannot process the request because the client has sent an invalid or malformed request. This can happen if the client has provided incorrect or incomplete data, or if the client is using an unsupported HTTP method or protocol.",
    "What is meant by 503 Service Unavailable?",
    "This error occurs when the server is temporarily unable to handle the request due to maintenance or overload. This can happen if the server is undergoing maintenance or if it is experiencing a high volume of traffic.",
    "What is meant by 405 Method Not Allowed?",
    "This error occurs when the server does not support the HTTP method used in the request. This can happen if the client is using an unsupported or invalid method, such as attempting to write to a read-only resource.",
    "What is HTTP?",
    "HTTP stands for Hypertext Transfer Protocol. It is a protocol that allows communication between web clients (such as web browsers) and web servers.",
    "What is a GET request?",
    "A GET request is an HTTP request method used to retrieve information from a web server. It is commonly used to retrieve web pages or other resources.",
    "What is a POST request?",
    "A POST request is an HTTP request method used to submit data to a web server. It is commonly used to send form data or to update resources on the server.",
    "What is the difference between a GET request and a POST request?",
    "The main difference between a GET request and a POST request is the type of data being sent. GET requests send data in the URL parameters, while POST requests send data in the request body. GET requests are typically used for retrieving data, while POST requests are typically used for sending data.",
    "What is a query parameter?",
    "A query parameter is a key-value pair that is included in a URL to provide additional information to the web server. Query parameters are commonly used in GET requests to specify search criteria or other parameters.",
    "What is a request header?",
    "A request header is a set of key-value pairs that are included in an HTTP request to provide additional information about the request. Headers can be used to provide information about the client, such as the user agent or the preferred language.",
    "What is a response status code?",
    "A response status code is a three-digit code that is sent by a web server to indicate the status of an HTTP request. Common status codes include 200 (OK), 404 (Not Found), and 500 (Internal Server Error).",
    " What is a cookie?",
    "A cookie is a small piece of data that is sent by a web server to a web browser and stored on the client's computer. Cookies are commonly used to store user preferences or login information.",
    " What is a cross-site request forgery (CSRF) attack?",
    "A CSRF attack is a type of security exploit in which a malicious website tricks a user into performing an action on a different website without the user's knowledge or consent. This can be prevented by using anti-CSRF tokens or by requiring user authentication for sensitive actions.",
    " What is a cross-origin resource sharing (CORS) policy?",
    "A CORS policy is a security mechanism that allows web servers to specify which domains are allowed to access their resources. This can be used to prevent cross-site scripting attacks and other security vulnerabilities.",

];

window.onload = function () {
    displayRandom();
}

let currentHtmlIndex = 0;
let currentCssIndex = 0;
let currentJsIndex = 0;
let currentRandomIndex = 0;

let quote = quotes[Math.floor(Math.random() * quotes.length)];

document.getElementById("quote-box").innerHTML = quote;

function displayHtml() {
    htmlDeck.innerHTML = html[currentHtmlIndex];
    htmlBtn.classList.add('nav-active');
    cssBtn.classList.remove('nav-active');
    jsBtn.classList.remove('nav-active');
    randomBtn.classList.remove('nav-active');
    currentHtmlIndex = (currentHtmlIndex + 1) % html.length;
}

function displayCss() {
    let cssDeck = document.getElementById("display-flashcard");
    cssDeck.innerHTML = css[currentCssIndex];
    cssBtn.classList.add('nav-active');
    htmlBtn.classList.remove('nav-active');
    jsBtn.classList.remove('nav-active');
    randomBtn.classList.remove('nav-active');
    currentCssIndex = (currentCssIndex + 1) % css.length;
}

function displayJs() {
    let jsDeck = document.getElementById("display-flashcard");
    jsDeck.innerHTML = js[currentJsIndex];
    jsBtn.classList.add('nav-active');
    htmlBtn.classList.remove('nav-active');
    cssBtn.classList.remove('nav-active');
    randomBtn.classList.remove('nav-active');
    currentJsIndex = (currentJsIndex + 1) % js.length;
}

function displayRandom() {
    let randomDeck = document.getElementById("display-flashcard");
    randomDeck.innerHTML = random[currentRandomIndex];
    randomBtn.classList.add('nav-active');
    htmlBtn.classList.remove('nav-active');
    cssBtn.classList.remove('nav-active');
    jsBtn.classList.remove('nav-active');
    currentRandomIndex = (currentRandomIndex + 1) % random.length;
}




